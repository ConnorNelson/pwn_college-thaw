Overview
[[[
Level 4 - LFSR 1

Difficulty:
  Rules: [***] (777 win streak, 2000 rounds)
  Seed:  [*--] (fixed)
  PRNG:  [*--] (7-bit LFSR)
]]]

Description
[[[
Now comes the fun part - predicting future outputs on previous outputs alone!
The PRNG implemented here is a Linear Feedback Shift Register - one of the
simplest, yet effective and elegant solutions for RNG. Check the following
hint and play around with the lfsr_toy in /challenge/ to get the hang of it!
]]]

LFSR basics
[[[
#TODO
]]]

Intended approach
[[[
While this challenge's implementation of LFSR can be beaten in several ways,
it is mostly intended as a practical guide on infering the RNG's internal
state from its outputs alone. Reverse-engineer the algorithm, get a few
results from the challenge and use them to match the challenge's outputs!
]]]

Hint 1
[[[
In case of LFSRs, you can get the initial state by just reading the ammount
of bits equal to LFSR's length. Combine that and the fact that the seed is
fixed to develop a flexible solution that can be reused in the future.
]]]

Bonus hint
[[[
LFSR's outputs loop around after 2 to the power of LFSR's length minus one.
Here it's 2**7-1=127, so exploiting that is a valid approach!
The next challenge though...
]]]
